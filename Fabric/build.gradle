plugins {
    id 'fabric-loom' version '1.3.+'
    id 'idea'
    id 'io.github.CDAGaming.cursegradle' version '1.6.1'
}

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${mappings_version}@zip")
    }

    implementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    implementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    compileOnly project(":Common")
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }

    mixin {
        defaultRefmapName.convention("${mod_id}.refmap.json")
    }

    //accessWidenerPath = file("${project(':Common').projectDir.path}/src/main/resources/liveworldgen.accesswidener")
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

sourcesJar {
    from(project(":Common").sourceSets.main.allSource)
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version,
                "MixinConfigs": "${mod_id}.mixins.json"
        ])
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = compileJava.destinationDirectory.asFile.get() as File
    }
}